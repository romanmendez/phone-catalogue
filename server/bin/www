#!/usr/bin/env node

const http = require("http");

let app = require("../app");

app.use((req, res) => {
  res.status(404);
  res.json({ status: "NotFound" });
});

app.use((err, req, res, next) => {
  console.error("ERROR", req.method, req.path, err);
  if (!res.headersSent) {
    res.status(500);
    res.json({ status: err.message });
  }
});

let server = http.createServer(app);

server.on("error", error => {
  if (error.syscall !== "listen") {
    throw error;
  }

  switch (error.code) {
    case "EACCES":
      console.error(`Port ${process.env.SERVER_PORT || 3000} requires elevated privileges`);
      process.exit(1);
      break;
    case "EADDRINUSE":
      console.error(`Port ${process.env.SERVER_PORT || 3000} is already in use`);
      process.exit(1);
      break;
    default:
      throw error;
  }
});

server.listen(process.env.SERVER_PORT || 3000, () => {
  console.log(`Listening on http://localhost:${process.env.SERVER_PORT || 3000}`);
});
